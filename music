<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>üéµ YouTube Player</title>
<style>
  body {
    margin: 0;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background: linear-gradient(135deg, #1e1e1e, #2c2c2c);
    color: #fff;
    overflow-x: hidden;
  }
  header {
    text-align: center;
    padding: 20px;
    background: #1db954;
    color: #fff;
  }
  header h1 { margin: 0; }
  .input-section { text-align: center; margin: 20px; }
  input[type=text] {
    width: 60%; padding: 10px;
    border-radius: 50px; border: none; outline: none;
  }
  button {
    padding: 10px 20px; margin-left: 10px;
    border: none; border-radius: 50px;
    background: #1db954; color: white; cursor: pointer; font-weight: bold;
  }
  button:hover { background: #17a44c; }
  .playlist {
    display: flex; flex-wrap: nowrap;
    overflow-x: auto; padding: 20px; gap: 15px;
  }
  .song-card {
    background: #2a2a2a;
    min-width: 250px; border-radius: 15px;
    overflow: hidden; flex-shrink: 0;
    transition: transform 0.3s;
  }
  .song-card:hover { transform: scale(1.05); }
  .song-card img { width: 100%; height: 140px; object-fit: cover; }
  .song-info { padding: 10px; }
  .song-info h3 { margin: 5px 0; font-size: 16px; }
  .song-info p { margin: 3px 0; font-size: 12px; color: #bbb; }
  video, audio { width: 100%; margin-top: 10px; outline: none; }
  .download-btn {
    display: inline-block; margin-top: 10px;
    background: #1db954; color: #fff;
    padding: 8px 15px; border-radius: 50px;
    text-decoration: none; font-weight: bold;
    cursor: pointer;
  }
  .download-btn:hover { background: #17a44c; }
  .progress-container {
    margin-top: 10px;
    background: #444;
    border-radius: 10px;
    height: 8px;
    width: 100%;
    overflow: hidden;
  }
  .progress-bar {
    background: #1db954;
    height: 100%;
    width: 0%;
    transition: width 0.2s;
  }
  .progress-text {
    font-size: 12px;
    margin-top: 5px;
    text-align: center;
    color: #ccc;
  }
</style>
</head>
<body>
<header>
  <h1>üéµ YouTube Player</h1>
</header>

<section class="input-section">
  <input type="text" id="ytUrl" placeholder="Pega el enlace de YouTube aqu√≠">
  <button onclick="downloadMedia()">üéß A√±adir</button>
</section>

<section class="playlist" id="playlist"></section>

<footer style="text-align:center; padding:10px; border-top:1px solid #444; font-size:12px;">
  ¬Æ Desarrollado por Shadow.xyz | ¬© Rin Itoshi MD
</footer>

<script>
  const playlist = [];

  async function downloadMedia() {
    const url = document.getElementById('ytUrl').value.trim();
    if (!url) return alert('Ingresa un enlace de YouTube');
    try {
      let apiUrl = url.includes('ytmp4')
        ? `https://delirius-apiofc.vercel.app/download/ytmp4?url=${encodeURIComponent(url)}`
        : `https://delirius-apiofc.vercel.app/download/ytmp3?url=${encodeURIComponent(url)}`;

      const res = await fetch(apiUrl);
      const data = await res.json();
      if (!data.status) return alert('Error al obtener el media');

      const song = {
        title: data.data.title,
        author: data.data.author,
        image: data.data.image_max_resolution || data.data.image,
        duration: data.data.duration,
        views: data.data.views,
        likes: data.data.likes,
        downloadUrl: data.data.download.url,
        filename: data.data.download.filename,
        type: data.data.download.extension
      };

      playlist.push(song);
      renderPlaylist();
      document.getElementById('ytUrl').value = '';
    } catch (err) {
      console.error(err);
      alert('Ocurri√≥ un error al procesar la descarga.');
    }
  }

  function renderPlaylist() {
    const container = document.getElementById('playlist');
    container.innerHTML = '';
    playlist.forEach((song, index) => {
      const card = document.createElement('div');
      card.className = 'song-card';
      card.innerHTML = `
        <img src="${song.image}" alt="${song.title}">
        <div class="song-info">
          <h3>${song.title}</h3>
          <p>Autor: ${song.author}</p>
          <p>Duraci√≥n: ${Math.floor(song.duration/60)}:${('0'+(song.duration%60)).slice(-2)}</p>
          <p>Vistas: ${song.views} | Likes: ${song.likes}</p>
          ${song.type==='mp4'
            ? `<video controls src="${song.downloadUrl}"></video>`
            : `<audio controls src="${song.downloadUrl}"></audio>`}
          <button class="download-btn" onclick="startDownload(${index})">üíæ Descargar</button>
          <div class="progress-container" id="progress-${index}" style="display:none;">
            <div class="progress-bar" id="bar-${index}"></div>
          </div>
          <div class="progress-text" id="text-${index}"></div>
        </div>
      `;
      container.appendChild(card);
    });
  }

  async function startDownload(index) {
    const song = playlist[index];
    const url = song.downloadUrl;

    const progressContainer = document.getElementById(`progress-${index}`);
    const progressBar = document.getElementById(`bar-${index}`);
    const progressText = document.getElementById(`text-${index}`);
    progressContainer.style.display = "block";

    try {
      const response = await fetch(url);
      if (!response.ok) throw new Error("Error en la descarga");

      const contentLength = response.headers.get("content-length");
      if (!contentLength) throw new Error("No se puede obtener tama√±o");

      const total = parseInt(contentLength, 10);
      let loaded = 0;
      const reader = response.body.getReader();
      const chunks = [];

      while (true) {
        const { done, value } = await reader.read();
        if (done) break;
        chunks.push(value);
        loaded += value.length;
        let percent = Math.floor((loaded / total) * 100);
        progressBar.style.width = percent + "%";
        progressText.textContent = `Descargando... ${percent}%`;
      }

      const blob = new Blob(chunks);
      const link = document.createElement("a");
      link.href = URL.createObjectURL(blob);
      link.download = song.filename;
      link.click();

      progressText.textContent = "‚úÖ Descarga completada";
    } catch (err) {
      console.error(err);
      progressText.textContent = "‚ùå Error en la descarga";
    }
  }
</script>
</body>
</html>
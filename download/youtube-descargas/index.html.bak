<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Descargador YouTube</title>
<style>
  body { font-family: Arial; background: #121212; color: #fff; margin: 0; padding: 20px; }
  h1 { text-align: center; color: #ff4081; }
  form { text-align: center; margin-bottom: 20px; }
  input[type=text] { width: 60%; padding: 10px; border-radius: 5px; border: none; font-size: 16px; }
  button { padding: 10px 20px; border-radius: 5px; border: none; background-color: #ff4081; color: #fff; font-size: 16px; cursor: pointer; margin: 5px; }
  button:hover { background-color: #e73370; }
  .info { display: flex; flex-direction: column; align-items: center; margin-bottom: 20px; }
  .info img { width: 320px; border-radius: 10px; margin-bottom: 10px; }
  .download-section { display: flex; flex-wrap: wrap; justify-content: center; gap: 20px; margin-top: 20px; }
  .download-card { background: #1e1e1e; padding: 15px; border-radius: 10px; width: 250px; text-align: center; }
  select { width: 80%; padding: 5px; margin: 10px 0; border-radius: 5px; border: none; }
  a.download-btn { display: inline-block; margin-top: 10px; padding: 8px 15px; border-radius: 5px; background: #ff4081; color: #fff; text-decoration: none; }
  a.download-btn:hover { background-color: #e73370; }
  video, audio { margin-top: 10px; width: 100%; border-radius: 10px; }
</style>
</head>
<body>

<h1>Descargador YouTube ♻️</h1>

<form id="downloadForm">
  <input type="text" id="youtubeURL" placeholder="Pega el enlace de YouTube aquí..." required>
  <button type="submit">Buscar Video</button>
</form>

<div class="info" id="videoInfo"></div>
<div class="download-section" id="downloadSection"></div>

<script>
const API_BASE = "https://api.vreden.my.id/api/v1/download/youtube";

const form = document.getElementById('downloadForm');
const videoInfoDiv = document.getElementById('videoInfo');
const downloadSection = document.getElementById('downloadSection');

form.addEventListener('submit', async (e) => {
  e.preventDefault();
  const url = document.getElementById('youtubeURL').value.trim();
  if (!url) return;

  videoInfoDiv.innerHTML = 'Cargando información...';
  downloadSection.innerHTML = '';

  try {
    // --- Audio ---
    const audioRes = await fetch(`${API_BASE}/audio?url=${encodeURIComponent(url)}&quality=128`);
    const audioData = await audioRes.json();

    // --- Video ---
    const videoRes = await fetch(`${API_BASE}/video?url=${encodeURIComponent(url)}&quality=360`);
    const videoData = await videoRes.json();

    if (!audioData.status || !videoData.status) {
      videoInfoDiv.innerHTML = 'Error al obtener información del video.';
      return;
    }

    const metadata = audioData.result.metadata;
    const thumbnail = metadata.thumbnail;

    videoInfoDiv.innerHTML = `
      <img src="${thumbnail}" alt="${metadata.title}">
      <h2>${metadata.title}</h2>
      <p><strong>Autor:</strong> <a href="${metadata.author.url}" target="_blank">${metadata.author.name}</a></p>
      <p><strong>Duración:</strong> ${metadata.duration.timestamp} | <strong>Vistas:</strong> ${metadata.views.toLocaleString()}</p>
      <p>${metadata.description}</p>
    `;

    // --- Audio Card ---
    const audioCard = document.createElement('div');
    audioCard.className = 'download-card';
    audioCard.innerHTML = `
      <h3>Audio</h3>
      <audio id="audioPlayer" controls src="${audioData.result.download.url}"></audio>
      <select id="audioQualitySelect">
        ${audioData.result.download.availableQuality.map(q => `<option value="${q}">${q} kbps</option>`).join('')}
      </select>
      <a href="${audioData.result.download.url}" id="audioDownloadBtn" class="download-btn" download>Descargar</a>
    `;
    downloadSection.appendChild(audioCard);

    const audioSelect = audioCard.querySelector('#audioQualitySelect');
    const audioBtn = audioCard.querySelector('#audioDownloadBtn');
    const audioPlayer = audioCard.querySelector('#audioPlayer');

    audioSelect.addEventListener('change', async () => {
      const quality = audioSelect.value;
      const res = await fetch(`${API_BASE}/audio?url=${encodeURIComponent(url)}&quality=${quality}`);
      const data = await res.json();
      if(data.status){
        audioBtn.href = data.result.download.url;
        audioPlayer.src = data.result.download.url;
      }
    });

    // --- Video Card ---
    const videoCard = document.createElement('div');
    videoCard.className = 'download-card';
    videoCard.innerHTML = `
      <h3>Video</h3>
      <video id="videoPlayer" controls src="${videoData.result.download.url}"></video>
      <select id="videoQualitySelect">
        ${videoData.result.download.availableQuality.map(q => `<option value="${q}">${q}p</option>`).join('')}
      </select>
      <a href="${videoData.result.download.url}" id="videoDownloadBtn" class="download-btn" download>Descargar</a>
    `;
    downloadSection.appendChild(videoCard);

    const videoSelect = videoCard.querySelector('#videoQualitySelect');
    const videoBtn = videoCard.querySelector('#videoDownloadBtn');
    const videoPlayer = videoCard.querySelector('#videoPlayer');

    videoSelect.addEventListener('change', async () => {
      const quality = videoSelect.value;
      const res = await fetch(`${API_BASE}/video?url=${encodeURIComponent(url)}&quality=${quality}`);
      const data = await res.json();
      if(data.status){
        videoBtn.href = data.result.download.url;
        videoPlayer.src = data.result.download.url;
      }
    });

  } catch (err) {
    console.error(err);
    videoInfoDiv.innerHTML = 'Error al procesar la solicitud.';
  }
});
</script>

</body>
</html>